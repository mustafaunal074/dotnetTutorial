- Soru 1: static ile const arasındaki fark nedir ?
=> static değişkenler adı üzerinde değerleri değişebilir lakin const'lar sabittir. Not olarakta const yapıları özünde statictir.

- Soru 2: readonly ile const arasındaki fark nedir ?
=> readonlynin const'tan farkı tanımlamdığı yerde değil, ekstra olarakta constructor içerisinde de değeri atanabilir. Dependency Injection deseninde çok sık tercih edilir
=> readonly static değildir.

- Soru 3: boxing unboxing nedir ?
=> Veriyi objectin içine koymaya => boxing
=> objectin içinden kendi türünde elde etmeye => unboxing

- Soru 4: var ile object arasındaki fark nedir?
=> var bir keyworddür, object ise bir değişkendir.
=> var compiler tarafından değişkenin türünü belirler, objectin türü zaten direkt objectir
=> var ile tanımlanan değişkenlerde kendi türüne ait işlemler yapılabilir, object te ise unboxing yapılmadan yapılamaz

- Soru 5: var ile dynamic arasındaki fark nedir ?
=>  var derleme aşamasında değerin türüne bürünürken, dynamic ise runtime'da verilen değerin türüne bürünecektir

- Soru 6: İki tür arasında yapılan aritmatik işlem sonucunda donen değerin türü ne olmaktadır. Ve Yahut farklı iki tür arasında işlem yapıldığında dönen değerin türü ne olmaktadır ?
=> Farklı iki tür arasında yapılan işlem sonucunda dönen değerin tipi değer aralığı en büyük olan tipinki olarak dönmektedir Orn : decimal-int -> decimal dönmektedir. Aynı türde yapılan işlemlerdede yapılan işlemin türü dönmektedir.
=> Lakin bye-byte arasında yapılan işlem neticesinde dönen değer int olarak döncektir. Bu bir istisnadir.

- Soru 7: Herhangi bir string ifade ile bir int değişken toplanırsa neler olur ?
=> String bir ifade ile bir int değer toplanırsa eğer int değer boxing olup object türüne biliçsiz bir tür dönüşümüne uğrar. Ve string bir ifadeyle bir string ifadeymiş gibi toplanır. toplama sonucu dönen değerin türüde string olur.

- Soru 8: Null Coalescing Assign operatörü nedir ne işe yarar ?
=> Örnek verelim
int? i = null;
cw(i ??= 1);  // burada yapılan işlem eğer ki i değeri null ise 1 değerini ata ve yazdır, eğer null değilse i değerini yazdır

- Soru 9: Positional Pattern Nedir ?
=> Deconstruct özelligi olan nesneleri kıyaslamak yahut degersel karşılaştırmak için kullanılan bir gelişimdir.

- Soru 10: Var Patterndaki var ile normal var arasında nasıl bir fark vardır?
=> Var patterndaki 'var' runtimede türüne bürünürken, bildiğimiz var derleme zamanında türüne bürünür.

- Soru 11: if-else yapısı ile switch-case yapısı arasındaki fark nedir?
=> switch-case yapısı eşitlik durumuna if-else durumu karşılaştırma durumuna bkamaktaydı taki c#9.0 a akdar. Relational Patterns sayesinde switch-casede tüm eşitlik,büyük,küçük ... durumlarına bkaabilir hale gelmiştir.